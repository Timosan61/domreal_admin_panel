<?php
// –ü—Ä–æ—Å—Ç–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è LidTracker (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
header('Content-Type: text/html; charset=utf-8');

echo "<h1>LidTracker - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞</h1>";

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
try {
    require_once '../config/database.php';
    $database = new Database();
    $db = $database->getConnection();

    echo "<p style='color: green;'>‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î: <strong>–£—Å–ø–µ—à–Ω–æ</strong></p>";

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã leads
    $stmt = $db->query("SELECT COUNT(*) as count FROM leads");
    $result = $stmt->fetch(PDO::FETCH_ASSOC);

    echo "<p>üìä –í—Å–µ–≥–æ –ª–∏–¥–æ–≤ –≤ –±–∞–∑–µ: <strong>{$result['count']}</strong></p>";

    // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ª–∏–¥–æ–≤
    $stmt = $db->query("
        SELECT
            id,
            source,
            phone,
            name,
            status,
            created_at
        FROM leads
        ORDER BY created_at DESC
        LIMIT 5
    ");
    $leads = $stmt->fetchAll(PDO::FETCH_ASSOC);

    if (empty($leads)) {
        echo "<p style='color: orange;'>‚ö†Ô∏è –õ–∏–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>";
    } else {
        echo "<h3>–ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ª–∏–¥–æ–≤:</h3>";
        echo "<table border='1' cellpadding='10' style='border-collapse: collapse;'>";
        echo "<tr>";
        echo "<th>ID</th>";
        echo "<th>–ò—Å—Ç–æ—á–Ω–∏–∫</th>";
        echo "<th>–¢–µ–ª–µ—Ñ–æ–Ω</th>";
        echo "<th>–ò–º—è</th>";
        echo "<th>–°—Ç–∞—Ç—É—Å</th>";
        echo "<th>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</th>";
        echo "</tr>";

        foreach ($leads as $lead) {
            echo "<tr>";
            echo "<td>#{$lead['id']}</td>";
            echo "<td>" . htmlspecialchars($lead['source']) . "</td>";
            echo "<td>" . htmlspecialchars($lead['phone'] ?? '-') . "</td>";
            echo "<td>" . htmlspecialchars($lead['name'] ?? '-') . "</td>";
            echo "<td>" . htmlspecialchars($lead['status']) . "</td>";
            echo "<td>" . htmlspecialchars($lead['created_at']) . "</td>";
            echo "</tr>";
        }

        echo "</table>";
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞ "–°–µ–≥–æ–¥–Ω—è"
    $stmt = $db->query("
        SELECT COUNT(*) as count
        FROM leads
        WHERE DATE(created_at) = CURDATE()
    ");
    $today = $stmt->fetch(PDO::FETCH_ASSOC);

    echo "<p>üìÖ –õ–∏–¥–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è (CURDATE()): <strong>{$today['count']}</strong></p>";
    echo "<p>üïê –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞: <strong>" . date('Y-m-d H:i:s') . "</strong></p>";

    // SQL –∑–∞–ø—Ä–æ—Å –∏–∑ leads.php (—Å —Ñ–∏–ª—å—Ç—Ä–æ–º "–°–µ–≥–æ–¥–Ω—è")
    $testQuery = "
        SELECT
            id,
            phone,
            name,
            status
        FROM leads
        WHERE DATE(created_at) = CURDATE()
        ORDER BY created_at DESC
        LIMIT 100
    ";

    echo "<h3>–¢–µ—Å—Ç SQL –∑–∞–ø—Ä–æ—Å–∞ (—Ñ–∏–ª—å—Ç—Ä '–°–µ–≥–æ–¥–Ω—è'):</h3>";
    echo "<pre style='background: #f5f5f5; padding: 10px; border: 1px solid #ccc;'>" . htmlspecialchars($testQuery) . "</pre>";

    $stmt = $db->query($testQuery);
    $testLeads = $stmt->fetchAll(PDO::FETCH_ASSOC);

    echo "<p>–†–µ–∑—É–ª—å—Ç–∞—Ç: <strong>" . count($testLeads) . " –ª–∏–¥–æ–≤</strong></p>";

    if (!empty($testLeads)) {
        echo "<ul>";
        foreach ($testLeads as $lead) {
            echo "<li>Lead #{$lead['id']}: {$lead['phone']} - {$lead['name']} ({$lead['status']})</li>";
        }
        echo "</ul>";
    }

} catch (Exception $e) {
    echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞: " . htmlspecialchars($e->getMessage()) . "</p>";
    echo "<pre>" . htmlspecialchars($e->getTraceAsString()) . "</pre>";
}

echo "<hr>";
echo "<p><a href='leads.php'>‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –ª–∏–¥–æ–≤</a></p>";
echo "<p><small>–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏. –£–¥–∞–ª–∏—Ç–µ debug.php –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏.</small></p>";
?>
